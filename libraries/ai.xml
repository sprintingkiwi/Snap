<blocks app="Snap! 5.1, http://snap.berkeley.edu" version="1"><block-definition s="parla in modo casuale %&apos;message&apos;" type="command" category="sound"><comment x="0" y="0" w="241" collapsed="false">Says &apos;message&apos; with random pitch, rate, and voice.</comment><header></header><code></code><translations></translations><inputs><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>voice</l><l>pitch</l><l>rate</l></list></block><block s="doSetVar"><l>pitch</l><block s="reportRandom"><l>10</l><l>200</l></block></block><block s="doSetVar"><l>rate</l><block s="reportRandom"><l>50</l><l>200</l></block></block><block s="doSetVar"><l>voice</l><block s="reportRandom"><l>1</l><block s="reportListLength"><custom-block s="call eCraft2Learn reporter %txt with %mult%s"><l>get_voice_names</l><list></list></custom-block></block></block></block><block s="bubble"><block s="reportJoinWords"><list><l>I said "</l><block var="message"/><l>" using </l><l></l><l> with </l><block var="pitch"/><l>% pitch at </l><block var="rate"/><l>% rate.</l></list></block></block><custom-block s="speak %txt %br with pitch %n %br with rate %n %br with voice %n %br with volume %n %br in language %txt %br when finished do %cmdRing with the message %br wait %b before doing the next command"><block var="message"/><block s="reportQuotient"><block var="pitch"/><l>100</l></block><block s="reportQuotient"><block var="rate"/><l>100</l></block><block var="voice"/><l></l><l></l><block s="reifyScript"><script></script><list></list></block><l><bool>true</bool></l></custom-block></script></block-definition><block-definition s="run eCraft2Learn command %&apos;command name&apos; with %&apos;inputs&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%mult%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>function_name</l><l>parameters</l></list><l>if (typeof ecraft2learn === &apos;object&apos;) {&#xD;    ecraft2learn.run(function_name, parameters);&#xD;} else {&#xD;   var script = document.createElement("script");&#xD;   script.type = "text/javascript";&#xD;   script.addEventListener(&apos;error&apos;, function () {&#xD;          alert("Unable to load https://ecraft2learn.github.io/ai/ecraft2learn.js. Check your network connection.");&#xD;   });&#xD;   script.src = "https://ecraft2learn.github.io/ai/ecraft2learn.js";&#xD;   script.addEventListener(&apos;load&apos;, function () {&#xD;          ecraft2learn.run(function_name, parameters);&#xD;   });&#xD;   document.head.appendChild(script);&#xD;}&#xD;</l></block><list><block var="command name"/><block var="inputs"/></list></block></script></block-definition><block-definition s="call eCraft2Learn reporter %&apos;reporter name&apos; with %&apos;inputs&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%mult%s"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>function_name</l><l>parameters</l><l>no_warning</l></list><l>if (typeof ecraft2learn === &apos;object&apos;) {&#xD;    return ecraft2learn.run(function_name, parameters);&#xD;}&#xD;if (!no_warning) {&#xD;    alert("Any eCraft2Learn command must be run before the " + function_name + " reporter.");&#xD;}&#xD;return 0;</l></block><list><block var="reporter name"/><block var="inputs"/></list></block></block></script></block-definition><block-definition s="Load eCraft2Learn library" type="command" category="other"><comment x="0" y="0" w="248.57142857142858" collapsed="true">Returns only after eCraft2Learn library is loaded</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doWaitUntil"><custom-block s="Try to load ecraft2learn library"></custom-block></block></script></block-definition><block-definition s="Try to load ecraft2learn library" type="reporter" category="other"><comment x="0" y="0" w="323.5714285714286" collapsed="true">Should only be called by Load eCraft2Learn library</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>if (typeof ecraft2learn === &apos;object&apos;) {&#xD;   return true;&#xD;}&#xD;if (window.waiting_for_ecraft2learn_library) {&#xD;   return false;&#xD;}&#xD;window.waiting_for_ecraft2learn_library = true;&#xD;var script = document.createElement("script");&#xD;script.type = "text/javascript";&#xD;script.src = "https://ecraft2learn.github.io/ai/ecraft2learn.js";&#xD;document.head.appendChild(script);&#xD;return false;</l></block><list></list></block></block></script></block-definition><block-definition s="speak %&apos;message&apos; $nl with pitch %&apos;pitch&apos; $nl with rate %&apos;rate&apos; $nl with voice %&apos;voice&apos; $nl with volume %&apos;volume&apos; $nl in language %&apos;language&apos; $nl when finished do %&apos;what to do when finished&apos; with the message $nl wait %&apos;wait&apos; before doing the next command" type="command" category="sound"><comment x="0" y="0" w="280" collapsed="false">Speaks &apos;message&apos;. Optionally you can provide the pitch (a positive number), rate (a number between .1 and 2), voice (depends upon what voices are accessible from the browser - see &apos;get voices&apos;), volume (a positive number), and language code or name. And a script to run when finished, This command will wait until it is finished if wait is true.</comment><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%txt"></input><input type="%cmdRing"></input><input type="%b"></input></inputs><script><block s="doDeclareVariables"><list><l>finished</l></list></block><block s="doSetVar"><l>finished</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>speak</l><list><block var="message"/><block var="pitch"/><block var="rate"/><block var="voice"/><block var="volume"/><block var="language"/><block s="reifyScript"><script><block s="doSetVar"><l>finished</l><block s="reportBoolean"><l><bool>true</bool></l></block></block><block s="doRun"><block var="what to do when finished"/><list><l></l></list></block></script><list></list></block></list></custom-block><block s="doIf"><block var="wait"/><script><block s="doWaitUntil"><block var="finished"/></block></script></block></script></block-definition><block-definition s="quello che sto ascoltando in lingua %&apos;lang&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s">it<options>english=en&#xD;italiano=it&#xD;français=fr&#xD;deutsch=de&#xD;español=es&#xD;português=pt</options></input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>b</l></list></block><block s="doSetVar"><l>b</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>start_speech_recognition</l><list><block s="reifyScript"><script><block s="doSetVar"><l>a</l><l></l></block><block s="doSetVar"><l>b</l><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block><l></l><l></l><block var="lang"/></list></custom-block><block s="doWaitUntil"><block s="reportEquals"><block var="b"/><block s="reportBoolean"><l><bool>true</bool></l></block></block></block><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>stop_speech_recognition</l><list></list></custom-block><block s="doReport"><block var="a"/></block></script><scripts><script x="377" y="31.499999999999996"><custom-block s="set language to %s"><block var="lang"/></custom-block></script><script x="237" y="64"><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>set_default_language</l><list><block var="lang"/></list></custom-block></script></scripts></block-definition><block-definition s="traduci %&apos;text&apos; da %&apos;source&apos; a %&apos;target&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%s">it<options>english=en&#xD;italiano=it&#xD;français=fr&#xD;deutsch=de&#xD;español=es&#xD;português=pt</options></input><input type="%s">en<options>english=en&#xD;italiano=it&#xD;français=fr&#xD;deutsch=de&#xD;español=es&#xD;português=pt</options></input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>b</l></list></block><block s="doSetVar"><l>a</l><block s="reportURL"><block s="reportJoinWords"><list><l>https://translate.yandex.net/api/v1.5/tr.json/translate?key=trnsl.1.1.20190111T145502Z.3ec30219cc85ebc6.c6e53fafc6843f63600c56d38c6857c0988f6670&amp;text=</l><block var="text"/><l>&amp;lang=</l><block var="source"/><l>-</l><block var="target"/><l>&amp;format=plain</l></list></block></block></block><block s="doWarp"><script><block s="doForEach"><l>each item</l><block s="evaluate"><block s="reportJSFunction"><list><l>jsonString</l></list><l>return listify(JSON.parse(jsonString));&#xD;&#xD;function listify(jsonObject) {&#xD;  if (jsonObject instanceof Array) {&#xD;    return new List(jsonObject.map(function(eachElement) { return listify(eachElement)}));&#xD;  } else if (jsonObject instanceof Object) {&#xD;    return new List(Object.keys(jsonObject).map(function(eachKey) { return new List([eachKey,listify(jsonObject[eachKey])])} ))&#xD;  } else {&#xD;    return jsonObject&#xD;  }&#xD;}</l></block><list><block var="a"/></list></block><script><block s="doIf"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="each item"/></block><l>text</l></block><script><block s="doSetVar"><l>b</l><block s="reportListItem"><l>2</l><block var="each item"/></block></block></script></block></script></block></script></block><block s="doReport"><block s="reportListItem"><l>1</l><block var="b"/></block></block></script></block-definition><block-definition s="aggiungi esempio %&apos;example&apos; a classe %&apos;intent&apos;" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>b</l></list></block><block s="doSetVar"><l>b</l><custom-block s="replace string %s substring %s with %s"><block var="intent"/><l> </l><l>-</l></custom-block></block><block s="doSetVar"><l>b</l><custom-block s="replace string %s substring %s with %s"><block var="b"/><l>?</l><l></l></custom-block></block><block s="doSetVar"><l>a</l><block s="reportURL"><block s="reportJoinWords"><list><custom-block s="IP ai"></custom-block><l>/add-example/</l><custom-block s="parse_string %txt"><block var="b"/></custom-block><l>/</l><custom-block s="parse_string %txt"><block var="example"/></custom-block></list></block></block></block></script></block-definition><block-definition s="azzera classi conversazione" type="command" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="reportURL"><block s="reportJoinWords"><list><custom-block s="IP ai"></custom-block><l>/reset</l></list></block></block></block></script></block-definition><block-definition s="conversazione pronta" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="reportURL"><block s="reportJoinWords"><list><custom-block s="IP ai"></custom-block><l>/status</l></list></block></block></block><block s="doReport"><block s="reportEquals"><block var="a"/><l>ready</l></block></block></script></block-definition><block-definition s="IP ai" type="reporter" category="other"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><l>http://127.0.0.1:3001</l></block></script><scripts><script x="5" y="96.99999999999997"><block s="doReport"><l>http://localhost:3000</l></block></script></scripts></block-definition><block-definition s="replace string %&apos;string&apos; substring %&apos;substring&apos; with %&apos;string2&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>b</l></list></block><block s="doSetVar"><l>a</l><block s="reportTextSplit"><block var="string"/><block var="substring"/></block></block><block s="doSetVar"><l>b</l><l>0</l></block><block s="doRepeat"><block s="reportListLength"><block var="a"/></block><script><block s="doReplaceInList"><block var="b"/><block var="a"/><block s="reportJoinWords"><list><block s="reportListItem"><block var="b"/><block var="a"/></block><block var="string2"/></list></block></block><block s="doChangeVar"><l>b</l><l>1</l></block></script></block><block s="doReport"><block s="reportJoinWords"><list><block var="a"/></list></block></block></script></block-definition><block-definition s="parse_string %&apos;string&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><custom-block s="replace string %s substring %s with %s"><block var="string"/><l>?</l><l>%3F</l></custom-block></block><block s="doSetVar"><l>a</l><custom-block s="replace string %s substring %s with %s"><block var="a"/><l>/</l><l>%2F</l></custom-block></block><block s="doReport"><block var="a"/></block></script><scripts><script x="41" y="154.49999999999997"><block s="doSetVar"><l>a</l><custom-block s="replace string %s substring %s with %s"><block var="a"/><l> </l><l>%20</l></custom-block></block></script></scripts></block-definition><block-definition s="set language to %&apos;language&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>lang</l></list><l>if (window.speech_recognition) {&#xD;   window.speech_recognition.lang = lang;&#xD;}</l></block><list><block var="language"/></list></block></script></block-definition><block-definition s="classe %&apos;intent&apos; riconosciuta in %&apos;text&apos;" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>intent</l><custom-block s="replace string %s substring %s with %s"><block var="intent"/><l> </l><l>-</l></custom-block></block><block s="doSetVar"><l>a</l><block s="reportURL"><block s="reportJoinWords"><list><custom-block s="IP ai"></custom-block><l>/find/</l><custom-block s="parse_string %txt"><block var="intent"/></custom-block><l>/</l><custom-block s="parse_string %txt"><block var="text"/></custom-block></list></block></block></block><block s="doIfElse"><block s="reportEquals"><block var="a"/><l>true</l></block><script><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="a"/><l>false</l></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><script><block s="doReport"><block var="a"/></block></script></block></script></block></script><scripts><script x="242.5" y="184.99999999999997"><block s="doSetVar"><l>b</l><block s="reportTextSplit"><block var="a"/><l>;</l></block></block><block s="doReport"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="b"/></block><block var="intent"/></block></block></script></scripts></block-definition><block-definition s="parla %&apos;text&apos; con voce %&apos;lang&apos;" type="command" category="sound"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%s">it<options>english=en&#xD;italiano=it&#xD;français=fr&#xD;deutsch=de&#xD;español=es&#xD;português=pt</options></input></inputs><script><block s="bubble"><block var="text"/></block><block s="doDeclareVariables"><list><l>a</l></list></block><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>speak</l><list><block var="text"/><l></l><l></l><l></l><l></l><block var="lang"/><block s="reifyScript"><script><block s="doSetVar"><l>a</l><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block></list></custom-block><block s="doWaitUntil"><block var="a"/></block><block s="bubble"><l></l></block></script></block-definition><block-definition s="allena" type="command" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="reportURL"><block s="reportJoinWords"><list><custom-block s="IP ai"></custom-block><l>/train</l></list></block></block></block></script></block-definition></blocks>